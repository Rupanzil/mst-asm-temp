(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&o(a)}).observe(document,{childList:!0,subtree:!0});function e(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(t){if(t.ep)return;t.ep=!0;const s=e(t);fetch(t.href,s)}})();const d={X0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},XO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},X:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"X",subdivide:0},XH1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:[/\bH\b|\bH1\b/],panelType:"X",subdivide:1,legConnection:/LEG/},XH2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:[/\bH\b|\bH1\b/],panelType:"X",subdivide:1,legConnection:/LEG/},XH3:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR1?\b/,/\bH1?\b/,/\bR1?\b/],panelType:"X",subdivide:3,legConnection:/LEG/},XH3A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:["R3","R2"],secondaryHorizontal:[/\bR4\b/,/\bH1?\b/,/\bR1\b/],panelType:"X",subdivide:3,legConnection:/LEG/},XTR:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:["R3","R1","R2"],secondaryHorizontal:0,panelType:"XD",subdivide:1,legConnection:/LEG/},K:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"A",subdivide:0,legConnection:/LEG/},K1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR\b|\bR2\b/],panelType:"A",subdivide:1,legConnection:/LEG/},K2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR\b|\bR1\b/,secondaryHorizontal:[/\bR1?\b/],panelType:"A",subdivide:2,legConnection:/LEG/},K2A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:["R3","R1"],secondaryHorizontal:[/\bR4?\b/,/\bR2?\b/],panelType:"A",subdivide:2,legConnection:/LEG/},DL:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0,legConnection:/LEG/},DL0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0,legConnection:/LEG/},DLO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"S",subdivide:0},DR:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},DR0:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},DRO:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:0,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"Z",subdivide:0},M:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/\bH1?\b/,secondaryDiagonals:0,secondaryHorizontal:0,panelType:"V",subdivide:0},M1:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR2?\b/,secondaryHorizontal:[/\bR1?/],panelType:"V",subdivide:1},M2:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:/\bR1?\b/,secondaryHorizontal:[/\bR1?\b/],panelType:"V",subdivide:2},M2A:{leg:"LEG",mainDiagonal:"BR1",mainHorizontal:/H|H1/,secondaryDiagonals:["R4","R2"],secondaryHorizontal:[/\bR3?\b/,/\bR1?\b/],panelType:"V",subdivide:2}};let bn=[],gn=[],on=[];Object.keys(d).forEach(n=>{const i=d[n];on.push(n),i.secondaryHorizontal==0?gn.push(n):bn.push(n)});let J=[],cn=["RB16.0 235","CHS193.7X5.0 235","EA40X40X5 235","FB40X5 235"],j=[];function En(n){let i=/\bEA\d/,e=/\bCHS\d/,o=/\bDAS\d/,t=/\bASX\d/,s=/\bASXC\d/,a=/\bSTA\d/,l=/\bFB\d/,c=/\bFP\d/,r=/\bRB\d/,f="",u="User Defined",H="",h=" ",b="",g=0,S="User Defined",T=" ";return yn(n),console.log("Unique sections",J),J.forEach((p,R)=>{H=p[0],T=`S${p[1]}`,i.test(p[0])&&(f="Equal Angle",h="S"),e.test(p[0])&&(f="Pipe",h="S"),l.test(p[0])&&(f="Flat Bar",h="S"),c.test(p[0])&&(f="Flat Bar",h="S",H=Hn(p[0])),r.test(p[0])&&(f="Solid Round",h="S"),s.test(p[0])&&(f="60° BP Angle",h="S"),t.test(p[0])&&(f="Schifflerized (60° angle)",h="S"),o.test(p[0])&&(f="Equal Angle",b="Height",h="DB",g=10,H=rn(p[0]),console.log("this is DAS to EA",H)),a.test(p[0])&&(f="Equal Angle",b="Height",h="ST",g=10,H=rn(p[0]),console.log("this is STA to EA",H));let w=`${f}	${u}	${H}	${h}	${b}	${g}	${S}	${T}
`;K.push(w),f="",u="User Defined",H="",h=" ",b="",g=0,S="User Defined",T=" "}),K=K.join(""),K}function yn(n){n.forEach((o,t)=>{if(o.includes("BH")){let s=o[1];o.forEach((a,l)=>{if(a==="FY"){let c=o[l+1];cn.push(s+" "+c)}})}});const i=new Set(cn);let e=Array.from(i);e=e.map(function(o){return o.replace(/(\d)X(\d)/g,"$1x$2")}),e.forEach(o=>{j.push(o);let t=o.split(" ");J.push(t)}),console.log("Uniques section and Grade",J)}let K=[];const rn=n=>"EA"+n.match(/^([A-Z]+)([\dx]+)/)[2],Hn=n=>"FB"+n.match(/^([A-Z]+)([\dx]+)/)[2];function Bn(n,i){let e=[];return n.forEach((o,t)=>{i.test(o)&&e.push(n[t+1])}),e}function Sn(n,i){let e=[];return i.forEach(o=>{n.forEach((t,s)=>{(t==o||t=="R")&&e.push(n[s+1])})}),e}function Tn(n,i){let e=[];return i.forEach(o=>{n.forEach((t,s)=>{o.test(t)&&e.push(parseInt(n[s+1]))})}),e}function ln(n){return n=n.map(function(i){return i.replace(/(\d)X(\d)/g,"$1x$2")}),n}function Dn(n){let o=n.split(`
`).filter(s=>s.trim()!=="").map(s=>s.replace(/^\s+|\s$/g,"").toUpperCase());return o=ln(o),o.map(s=>s.trim().split(/\s+/))}let _;function Cn(n){let i=0;return n.forEach(e=>{e.includes("PANEL")&&i++}),_=i,i}function Gn(n){let i=[];return n.forEach(e=>{e.forEach((o,t)=>{if(o==="HT"){const s=parseFloat(e[t+1]);i.push(s.toFixed(2))}})}),i}function In(n){let i=[],e=0;for(let t=0;t<n.length;t++){const s=n[t];(s.join(" ").match(/\$?SECTION\s+\d+/)||s.includes("END"))&&e>0&&(i.push(e),e=0),s.includes("PANEL")&&e++}return[...i].reverse()}function Ln(n){let i=0;return n.forEach(e=>{e.includes("FACES")&&(i=e[e.length-1])}),Nn(n),i}function zn(n){let i=0;return n.forEach(e=>{e.includes("WBASE")&&e.forEach((o,t)=>{o==="WBASE"&&(i=e[t+1])})}),i}function An(n){let i=[];return n.forEach(o=>{o.includes("FACE")&&o.forEach((t,s)=>{if(t==="FACE"){let a=o[s+1];i.push(a)}})}),[...i].reverse()}function Rn(n){let i=[];return n.forEach(o=>{o.includes("TW")?o.forEach((t,s)=>{if(t==="TW"){let a=o[s+1];a=Number(a),isNaN(a)||i.push(a)}}):o.includes("HT")&&i.push(" ")}),[...i].reverse()}let Q=[];function Nn(n){n.forEach(i=>{i.join(" ").match(/^(?=.*\bFACE\b)(?=.*\bINVERT|INV(?:ERTED)?\b).*/)?Q.unshift(!0):i.join(" ").match(/\bFACE\b/)&&Q.unshift(!1)})}let $=[],pn=[],W=!1,B=[];function $n(n,i,e,o){return console.log("Panel faces detected from TD",i),console.log("This is the panel faces db",on),i.forEach((t,s)=>{on.includes(t)?(W=!0,fn(t,n,e,o,s,W,Q[s])):(W=!1,fn(t,n,e,o,s,W,Q[s]))}),$=$.join(),$=$.replaceAll(",",`
`),$}function fn(n,i,e,o,t,s,a){let l="",c,r="";s?(r="OK.",l=d[n].panelType,a?(n=n.replace(/\bK(?=\d)|\bK\b/,"M"),l=d[n].panelType,c=d[n].subdivide,B.push(n)):(l=d[n].panelType,c=d[n].subdivide,B.push(n))):(r="Not OK. Check Manually",a?(n="M2",l=d[n].panelType,c=d[n].subdivide,B.push(n)):n.match(/\bK/)?(n="K2",l=d[n].panelType,c=d[n].subdivide,B.push(n)):(n="X0",l=d[n].panelType,c=d[n].subdivide,B.push(n))),pn.push(r);let f=`${i[t]}	${l}	${c}	${e[t]}	${o[t]}	0	${r}`;$.push(f)}let un=[],U=[],dn=[];function vn(n){let i;return n.forEach(e=>{e.includes("FACE")&&e.forEach((o,t)=>{o=="LEG"&&(i=e[t+1],un.unshift(i))})}),un.forEach(e=>{n.forEach(o=>{o.includes(e)&&o.includes("FY")&&o.forEach((t,s)=>{if(t==e){let a=`${o[s+1]} ${o[s+4]}`;U.push(a)}})})}),U=ln(U),U.forEach(e=>{j.forEach((o,t)=>{o.includes(e)&&dn.push(t+1)})}),dn}let hn=[];function Mn(n){n.forEach(o=>{o.includes("FACE")&&o.forEach((t,s)=>{if(t=="BR"||t=="BR1"){let a=o[s+1];hn.unshift(a)}})});let i=[];hn.forEach(o=>{n.forEach(t=>{t.includes("CONNECT")&&t.includes("FY")&&t.forEach((s,a)=>{if(s==o){let l=`${t[a+1]} ${t[a+6]}`;i.push(l)}})})}),i=ln(i);let e=[];return i.forEach(o=>{j.forEach((t,s)=>{t.includes(o)&&e.push(s+1)})}),e}let k=[],F=[],N=[];function On(n,i){Object.keys(d).forEach(s=>{d[s].mainHorizontal!=0?k.push(s):F.push(s)});let e=i;console.log("These are the actual panel faces in the tower:",B),console.log("Panels having horizontals: ",k),console.log("Panels not having horizontals: ",F),n.forEach((s,a)=>{let l=!1;if(s.includes("FACE")){let c=B[e-1];if(k.includes(c))s.forEach((r,f)=>{if(r.match(/\bH1?\b/)){let u=parseInt(s[f+1]);N.push([e,u])}});else if(F.includes(c)&&n[a+1].includes("PLAN")){const r=n[a+1];r.forEach((f,u)=>{!r.includes("XIP")&&!r.includes("BTM")?(f=="PB1"||f=="PB")&&N.push([e,parseInt(r[u+1])]):l||(N.push([e,0]),l=!0)})}else F.includes(c)&&N.push([e,0]);e--}}),console.log("Main hor panel Id and panel number: ",N);let o=[];N.forEach(s=>{s[1]===0?o.unshift([s[0],s[1]]):n.forEach(a=>{a.includes(String(s[1]))&&a.includes("CONNECT")&&o.unshift([s[0],`${a[1]} ${a[6]}`])})}),console.log("main horizontal ids and sections",o);let t=[];return o.forEach(s=>{s[1]===0?t.push(0):j.forEach((a,l)=>{a.includes(s[1])&&t.push(l+1)})}),console.log("ASM main horizontals id",t),t}let sn=[],an=[],en=[],q=[];function Pn(n,i){Object.keys(d).forEach(t=>{d[t].secondaryDiagonals==0?an.push(t):sn.push(t)});let e=i;console.log("Actual converted panel faces: ",B),n.forEach((t,s)=>{if(t.includes("FACE")){let a=B[e-1];if(an.includes(a)&&q.unshift([e,0]),sn.includes(a)){if(a=="XH3"||a=="K1"||a=="K2"||a=="M2"){let l=[e,Bn(t,d[a].secondaryDiagonals)];q.unshift(l)}if(a=="XH3A"||a=="K2A"||a=="XTR"||a=="M2A"){let l=[e,Sn(t,d[a].secondaryDiagonals)];q.unshift(l)}}e--}});let o=[];return q.forEach((t,s)=>{if(t[1]===0)o.push([0]);else{let a=[];t[1].forEach(l=>{n.forEach(c=>{c.includes(l)&&c.includes("CONNECT")&&a.push(`${c[1]} ${c[6]}`)})}),o.push(a)}}),o.forEach(t=>{if(t[0]==0)en.push(0);else{let s=[];t.forEach(a=>{j.forEach((l,c)=>{l.includes(a)&&s.push(c+1)})}),en.push(s.join())}}),en}function Xn(n,i){let e=[];Object.keys(d).forEach(l=>{d[l].secondaryHorizontal==0||e.push(l)});let o=[],t=i;n.forEach((l,c)=>{if(l.includes("FACE")){let r=B[t-1];if(e.includes(r)){let f=Tn(l,d[r].secondaryHorizontal);o.unshift([t,f])}else r=="X"||r=="X0"?n[c+1].includes("XIP")||n[c+2].includes("XIP")?n[c+1].forEach((f,u)=>{if(f=="PB"||f=="PB1"){let H=[parseInt(n[c+1][u+1])];o.unshift([t,H])}}):o.unshift([t,0]):o.unshift([t,0]);t--}}),console.log("sec hor panel number and id",o);let s=[];o.forEach((l,c)=>{if(l[1]===0)s.push([0]);else{let r=[];l[1].forEach(f=>{!f==0?n.forEach(u=>{u.includes(String(f))&&u.includes("CONNECT")&&r.push(`${u[1]} ${u[6]}`)}):r.push(0)}),s.push(r)}}),console.log("secondary hor section and grade",s);let a=[];return s.forEach(l=>{if(l[0]==0)a.push(0);else{let c=[];l.forEach(r=>{j.forEach((f,u)=>{f.includes(r)&&c.push(u+1)})}),a.push(c.join())}}),a}function jn(n,i,e){const o=vn(n),t=Mn(n),s=On(n,e),a=Pn(n,e),l=Xn(n,e);let c=[];for(let r=0;r<e;r++){let f=`${i[r]}	${o[r]}	${t[r]}	${s[r]}	${a[r]}	${l[r]}	0	0				${pn[r]}`;c.push(f)}return c=c.join(`
`),c}function m(n){const i=n.split("-");return parseInt(i[0].match(/\d+/))}function E(n){const i=n.split("-");let e;return i[1].length==1||i[1].charAt(i[1].length-1)==0?e=i[1]:e=i[1].slice(0,-1),e=="4"?"Class 4.8":e=="5"?"Class 5.8":e=="6"?"Class 6.8":e=="8"?"Class 8.8":e=="10"?"Class 10.9":"Grade not in ASM DataBase"}function y(n){const i=n.split("-");let e;if(i[1].length==1)e="S.SHEAR";else{const o=i[1].charAt(i[1].length-1);o==2?e="D.SHEAR":o==0?e="S.SHEAR":o=="T"?e="TENSION":e="Error in Connection Type"}return e}function Fn(n,i){let e=[.5],o=0;return console.log("Numbers of panels in each section",i),i.forEach((t,s)=>{o+=t,s!=i.length-1&&e.push(parseFloat(n[o-1])+.5)}),console.log("Section elevations: ",e),e}function xn(n,i,e){let o=[],t=[],s=[],a=[],l=[],c=[],r=[],f=[],u=[],H=[];n.forEach(b=>{if(b.includes("BOLT")&&b.includes("LEG")){const g=b.indexOf("LEG");if(g!==-2&&g<b.length-1){const S=parseInt(b[g+1]);if(!isNaN(S))if(o.unshift(S),S===0){const T=m("M16-8");t.unshift(T);const p=E("M16-8");s.unshift(p);const R=y("M16-8");a.unshift(R)}else{const T=m(b[g+2]);t.unshift(T);const p=E(b[g+2]);s.unshift(p);const R=y(b[g+2]);a.unshift(R)}}}});let h=0;return i.forEach((b,g)=>{l.push(o[h]),c.push(t[h]),r.push(s[h]),f.push(a[h]),o[h]>=8?u.push(4):u.push(2),h+=b}),e.forEach((b,g)=>{const S=`${b}	${f[g]}	${l[g]}	${c[g]}			${r[g]}	YES	${u[g]}	0	NO	0			SINGLE THICK.`;H.push(S)}),H=H.join(`
`),H}function Kn(n,i,e){const o=Fn(i,e);return console.log("panel elevations ",i),xn(n,e,o)}let x=[0];function Wn(n,i){const e=Un(i);return qn(n,e,i)}function Un(n){return n.forEach((i,e)=>{e<n.length-1&&x.push(i)}),x}function qn(n,i,e){let o=[],t=[],s=[],a=[],l=[];return n.forEach(c=>{c.join(" ").match(/BOLT.*\bBR1?\b/)&&c.forEach((r,f)=>{if(r.match(/\bBR1?\b/)){const u=parseInt(c[f+1]);if(!isNaN(u)){o.unshift(u);const H=m(c[f+2]);t.unshift(H);const h=E(c[f+2]);s.unshift(h);const b=y(c[f+2]);a.unshift(b)}}})}),i.forEach((c,r)=>{const f=`${c}	${e[r]}	${a[r]}	${o[r]}	${t[r]}			${s[r]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;l.push(f)}),l=l.join(`
`),l}function Yn(n,i){return Vn(n,i)}let Y=[];function Vn(n,i){let e=_;return n.forEach((o,t)=>{if(o.includes("FACE")){const s=B[e-1];k.includes(s)?Zn(s,t,n):F.includes(s)&&kn(s,t,n),e--}}),console.log("Bolt Grade: ",z),console.log("Bolt Bolt Number: ",v),console.log("Bolt Dia: ",L),console.log("Bolt Connection Type: ",A),x.forEach((o,t)=>{const s=`${o}	${i[t]}	${A[t]}	${v[t]}	${L[t]}			${z[t]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;Y.push(s)}),Y=Y.join(`
`),Y}let v=[],L=[],z=[],A=[];function Zn(n,i,e){for(let o=i;o<i+5;o++)if(e[o].join(" ").match(/BOLT.*\bH1?\b/)){e[o].forEach((t,s)=>{if(t.match(/\bH1?\b/)){const a=parseInt(e[o][s+1]);if(!isNaN(a))if(v.unshift(a),a!=0){const l=e[o][s+2];console.log("This line has direct horizontal bolts: ",e[o-1].join(" "),":For panel face: ",n);const c=m(l);L.unshift(c);const r=E(l);z.unshift(r);const f=y(l);A.unshift(f)}else{const l="M16-8";console.log("This line has 0 horizontal bolts: ",e[o-1].join(" "),":For panel face: ",n);const c=m(l);L.unshift(c);const r=E(l);z.unshift(r);const f=y(l);A.unshift(f)}}});return}else if(e[o].join(" ").match(/\bBOLT\b.*\bLEG\b/)){console.log("this is for 0 bolts on :",n,"on line :",e[o-1].join(" ")),v.unshift(0);const t="M16-8",s=m(t);L.unshift(s);const a=E(t);z.unshift(a);const l=y(t);A.unshift(l)}else if(e[o].join(" ").match(/\bPANEL\b/))return}function kn(n,i,e){for(let o=i;o<i+5;o++)if(e[o].join(" ").match(/\bPLAN\b(?!.*\b(XIP|BTM)\b)/)){console.log("Line currently matched is ",e[o].join(" "),"Panel Face: ",n);for(let t=o;t<o+2;t++)if(e[t].join(" ").match(/\bBOLT.*\bPB1?\b/)){for(let s=0;s<e[t].length;s++)if(e[t][s].match(/\bPB1?\b/)){let a=s;const l=parseInt(e[t][a+1]);if(!isNaN(l)){v.unshift(l);const c=e[t][a+2],r=m(c);L.unshift(r);const f=E(c);z.unshift(f);const u=y(c);A.unshift(u);return}}return}}else if(e[o].join(" ").match(/\bBOLT\b.*\bLEG\b/)){console.log("this is for 0 bolts on :",n,"on line :",e[o-1].join(" ")),v.unshift(0);const t="M16-8",s=m(t);L.unshift(s);const a=E(t);z.unshift(a);const l=y(t);A.unshift(l);return}else if(e[o].join(" ").match(/\bPANEL\b/))return}let D=[],C=[],G=[],I=[],V=[],tn;function Jn(n,i,e){return tn=_,n.forEach((o,t)=>{if(o.includes("FACE")){const s=B[tn-1];if(an.includes(s)){D.unshift(0);const l="M12-8",c=m(l);G.unshift(c);const r=E(l);C.unshift(r);const f=y(l);I.unshift(f)}else if(sn.includes(s)){const a=["XH3","K1","K2","M1","M2"],l=["XH3A","XTR","K2A","M2A"];a.includes(s)?Qn(t,n):l.includes(s)&&_n(t,n,s)}tn--}}),i.forEach((o,t)=>{const s=`${o}	${e[t]}	${I[t]}	${D[t]}	${G[t]}			${C[t]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;V.push(s)}),V=V.join(`
`),V}function Qn(n,i){for(let e=n;e<n+5;e++)if(i[e].join(" ").match(/\bBOLT\b.*\bR1?\b/)&&i[e].forEach((o,t)=>{if(o.match(/\bR1?\b/)){const s=parseInt(i[e][t+1]);if(!isNaN(s))if(s===0){const a="M12-8";D.unshift(s);const l=m(a);G.unshift(l);const c=E(a);C.unshift(c);const r=y(a);I.unshift(r)}else{const a=i[e][t+2];D.unshift(s);const l=m(a);G.unshift(l);const c=E(a);C.unshift(c);const r=y(a);I.unshift(r)}}}),i[e].join(" ").match(/\bPANEL\b.*\bHT\b/))return}function _n(n,i,e){for(let o=n;o<n+5;o++){if(i[o].join(" ").match(/\bBOLT\b.*\bR\b/))i[o].forEach((t,s)=>{if(t.match(/\bR\b/)){const a=parseInt(i[o][s+1]);if(!isNaN(a))if(a===0){const l="M12-8";D.unshift(a);const c=m(l);G.unshift(c);const r=E(l);C.unshift(r);const f=y(l);I.unshift(f)}else{const l=i[o][s+2];D.unshift(a);const c=m(l);G.unshift(c);const r=E(l);C.unshift(r);const f=y(l);I.unshift(f)}}});else if(i[o].join(" ").match(/\bBOLT\b.*\bR1\b/)){const t=d[e].secondaryDiagonals[0];i[o].forEach((s,a)=>{if(s==t){const l=parseInt(i[o][a+1]);if(!isNaN(l))if(l===0){const c="M12-8";D.unshift(l);const r=m(c);G.unshift(r);const f=E(c);C.unshift(f);const u=y(c);I.unshift(u)}else{const c=i[o][a+2];D.unshift(l);const r=m(c);G.unshift(r);const f=E(c);C.unshift(f);const u=y(c);I.unshift(u)}return}})}if(i[o].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}let M=[],O=[],P=[],X=[],Z=[];const wn=["XH1","XH3","XH3A","XH2"];function ne(n,i,e){let o=_;return n.forEach((t,s)=>{if(t.includes("FACE")){const a=B[o-1];bn.includes(a)?wn.includes(a)?ee(n,s):te(n,s,a):gn.includes(a)&&mn(),o--}}),i.forEach((t,s)=>{const a=`${t}	${e[s]}	${X[s]}	${M[s]}	${P[s]}			${O[s]}	YES	1	0	NO	0			SINGLE THICK.	SINGLE THICK.`;Z.push(a)}),Z=Z.join(`
`),Z}function ee(n,i){for(let e=i;e<i+5;e++){if(n[e].join(" ").match(/\bBOLT\b.*\bH1?\b/)){n[e].forEach((o,t)=>{if(o.match(/\bH1?\b/)){const s=parseInt(n[e][t+1]);if(!isNaN(s))if(s===0){const a="M12-8";M.unshift(s);const l=m(a);P.unshift(l);const c=E(a);O.unshift(c);const r=y(a);X.unshift(r)}else{const a=n[e][t+2];M.unshift(s);const l=m(a);P.unshift(l);const c=E(a);O.unshift(c);const r=y(a);X.unshift(r)}return}});return}else n[e].join(" ").match(/\bBOLT\b.*\bLEG\b/)&&mn();if(n[e].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}function te(n,i,e){for(let o=i;o<i+5;o++){if(n[o].join(" ").match(/\bBOLT\b.*\bR1?\b/)){const t=d[e].secondaryHorizontal[0];n[o].forEach((s,a)=>{if(s.match(t)){const l=parseInt(n[o][a+1]);if(!isNaN(l))if(l===0){const c="M12-8";M.unshift(l);const r=m(c);P.unshift(r);const f=E(c);O.unshift(f);const u=y(c);X.unshift(u)}else{const c=n[o][a+2];M.unshift(l);const r=m(c);P.unshift(r);const f=E(c);O.unshift(f);const u=y(c);X.unshift(u)}return}})}if(n[o].join(" ").match(/\bPANEL\b.*\bHT\b/))return}}function mn(){M.unshift(0);const i="M12-8",e=m(i);P.unshift(e);const o=E(i);O.unshift(o);const t=y(i);X.unshift(t)}document.getElementById("process-td").addEventListener("click",()=>{const n=document.getElementById("td-text").value;oe(n)});function oe(n){const i=Dn(n),e=zn(i),o=Ln(i),t=Cn(i),a=[...Gn(i)].reverse().map(nn=>Number(nn));let l=[],c=0;a.forEach(nn=>{c+=nn,l.push(c.toFixed(2))});const r=In(i),f=An(i),u=Rn(i),H=$n(l,f,u,a),h=document.getElementById("asm-panel-geometry");h.value=H,document.getElementById("num-of-faces").innerText=`No. of Tower Faces: ${o}`,document.getElementById("base-width").innerText=`Tower Base Width: ${e} m`;const b=En(i);document.getElementById("asm-selected-sections").value=b;const g=jn(i,l,t);document.getElementById("asm-panel-sections").value=g;const S=Kn(i,l,r);document.getElementById("asm-leg-connection").value=S;const T=Wn(i,l);document.getElementById("asm-main-diagonal-connection").value=T;const p=Yn(i,l);document.getElementById("asm-main-horizontal-connection").value=p;const R=Jn(i,x,l);document.getElementById("asm-secondary-diagonal-connections").value=R;const w=ne(i,x,l);document.getElementById("asm-secondary-horizontal-connections").value=w}
